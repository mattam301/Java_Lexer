{
  "terminal": [
    "(", ")", "{", "}", "*", "+", "-", "/", "%", ",", "<", ">", "<=", ">=", "=", "==", "!", "!=", ";", "[", "]",
    "identifier", "integer_constant", "float_constant", "boolean_constant", "string_constant",
    "for", "while", "break", "continue", "return", "else", "float", "if", "int", "void", "boolean"
  ],

  "non_terminal": [
    "<primary_expression>", "<constant>", "<unary_operator>", "<unary_expression>", "<type_specifier>",
    "<multiplicative_expression>", "<additive_expression>", "<relational_expression>", "<equality_expression>",
    "<assignment_expression>", "<expression>", "<declarator_tail>", "<declaration>", "<init_declarator_list>",
    "<init_declarator>", "<initializer>", "<declarator>", "<direct_declarator>", "<declarator_int>", "<statement>",
    "<compound_statement>", "<block_item_list>", "<block_item>", "<expression_statement>", "<selection_statement>",
    "<program>", "<primary_expression_tail>", "<for_statement>", "<while_statement>", "<expression_question>",
    "<break_statement>", "<continue_statement>", "<return_statement>", "<argument_list>", "<argument>",
    "<parameter_list>", "<parameter>", "<argument_list_temp>", "<assignment_expression_temp>",
    "<multiplicative_expression_temp>", "<init_declarator_list_temp>", "<relational_expression_temp>",
    "<equality_expression_temp>", "<init_declarator_temp>", "<parameter_list_temp>",
    "<additive_expression_temp>", "<selection_statement_temp>", "<block_item_list_temp>",
    "<parameter_list_question>", "<argument_list_question>"
  ],
  "start": "<program>",

  "rules": [
    {
      "left": "<program>",
      "right": ["<type_specifier>", "identifier", "(", "<parameter_list_question>", ")", "<compound_statement>"]
    },

    {
      "left": "<parameter>",
      "right": ["<type_specifier>", "<declarator>"]
    },
    {
      "left": "<parameter_list_temp>",
      "right": [",", "<parameter>", "<parameter_list_temp>"]
    },
    {
      "left": "<parameter_list_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<parameter_list>",
      "right": ["<parameter>", "<parameter_list_temp>"]
    },
    {
      "left": "<parameter_list>",
      "right": ["<parameter_list_temp>"]
    },
    {
      "left": "<parameter_list_question>",
      "right": ["<parameter_list>"]
    },
    {
      "left": "<parameter_list_question>",
      "right": ["EPSILON"]
    },

    {
      "left": "<argument>",
      "right": ["<expression>"]
    },
    {
      "left": "<argument_list_temp>",
      "right": [",", "<argument>", "<argument_list_temp>"]
    },
    {
      "left": "<argument_list_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<argument_list>",
      "right": ["<argument>", "<argument_list_temp>"]
    },
    {
      "left": "<argument_list>",
      "right": ["<argument_list_temp>"]
    },
    {
      "left": "<argument_list_question>",
      "right": ["<argument_list>"]
    },
    {
      "left": "<argument_list_question>",
      "right": ["EPSILON"]
    },

    {
      "left": "<declaration>",
      "right": ["<type_specifier>", "<init_declarator_list>", ";"]
    },
    {
      "left": "<init_declarator_list_temp>",
      "right": [",", "<init_declarator>", "<init_declarator_list_temp>"]
    },
    {
      "left": "<init_declarator_list_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<init_declarator_list>",
      "right": ["<init_declarator>", "<init_declarator_list_temp>"]
    },
    {
      "left": "<init_declarator_list>",
      "right": ["<init_declarator_list_temp>"]
    },
    {
      "left": "<init_declarator>",
      "right": ["<declarator>", "<init_declarator_temp>"]
    },
    {
      "left": "<init_declarator_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<init_declarator_temp>",
      "right": ["=", "<initializer>"]
    },
    {
      "left": "<type_specifier>",
      "right": ["void"]
    },
    {
      "left": "<type_specifier>",
      "right": ["int"]
    },
    {
      "left": "<type_specifier>",
      "right": ["float"]
    },
    {
      "left": "<type_specifier>",
      "right": ["boolean"]
    },
    {
      "left": "<declarator_tail>",
      "right": ["[", "<declarator_int>", "]"]
    },
    {
      "left": "<declarator_tail>",
      "right": ["EPSILON"]
    },
    {
      "left": "<declarator_int>",
      "right": ["integer_constant"]
    },
    {
      "left": "<declarator_int>",
      "right": ["EPSILON"]
    },
    {
      "left": "<declarator>",
      "right": ["<direct_declarator>", "<declarator_tail>"]
    },
    {
      "left": "<direct_declarator>",
      "right": ["identifier"]
    },
    {
      "left": "<direct_declarator>",
      "right": ["(", "<declarator>", ")"]
    },

    {
      "left": "<initializer>",
      "right": ["<expression>"]
    },

    {
      "left": "<primary_expression_tail>",
      "right": ["[", "<expression>", "]"]
    },
    {
      "left": "<primary_expression_tail>",
      "right": ["(", "<argument_list_question>", ")"]
    },
    {
      "left": "<primary_expression_tail>",
      "right": ["EPSILON"]
    },
    {
      "left": "<primary_expression>",
      "right": ["identifier", "<primary_expression_tail>"]
    },
    {
      "left": "<primary_expression>",
      "right": ["<constant>"]
    },
    {
      "left": "<primary_expression>",
      "right": ["(", "<expression>", ")"]
    },

    {
      "left": "<constant>",
      "right": ["integer_constant"]
    },
    {
      "left": "<constant>",
      "right": ["float_constant"]
    },
    {
      "left": "<constant>",
      "right": ["boolean_constant"]
    },
    {
      "left": "<constant>",
      "right": ["string_constant"]
    },

    {
      "left": "<unary_operator>",
      "right": ["+"]
    },
    {
      "left": "<unary_operator>",
      "right": ["-"]
    },
    {
      "left": "<unary_operator>",
      "right": ["!"]
    },
    {
      "left": "<unary_expression>",
      "right": ["<primary_expression>"]
    },
    {
      "left": "<unary_expression>",
      "right": ["<unary_operator>", "<primary_expression>"]
    },

    {
      "left": "<multiplicative_expression_temp>",
      "right": ["*", "<unary_expression>", "<multiplicative_expression_temp>"]
    },
    {
      "left": "<multiplicative_expression_temp>",
      "right": ["/", "<unary_expression>", "<multiplicative_expression_temp>"]
    },
    {
      "left": "<multiplicative_expression_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<multiplicative_expression>",
      "right": ["<unary_expression>", "<multiplicative_expression_temp>"]
    },

    {
      "left": "<additive_expression_temp>",
      "right": ["+", "<multiplicative_expression>", "<additive_expression_temp>"]
    },
    {
      "left": "<additive_expression_temp>",
      "right": ["-", "<multiplicative_expression>", "<additive_expression_temp>"]
    },
    {
      "left": "<additive_expression_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<additive_expression>",
      "right": ["<multiplicative_expression>", "<additive_expression_temp>"]
    },

    {
      "left": "<relational_expression_temp>",
      "right": ["<", "<additive_expression>", "<relational_expression_temp>"]
    },
    {
      "left": "<relational_expression_temp>",
      "right": [">", "<additive_expression>", "<relational_expression_temp>"]
    },
    {
      "left": "<relational_expression_temp>",
      "right": ["<=", "<additive_expression>", "<relational_expression_temp>"]
    },
    {
      "left": "<relational_expression_temp>",
      "right": [">=", "<additive_expression>", "<relational_expression_temp>"]
    },
    {
      "left": "<relational_expression_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<relational_expression>",
      "right": ["<additive_expression>", "<relational_expression_temp>"]
    },

    {
      "left": "<equality_expression_temp>",
      "right": ["==", "<relational_expression>", "<equality_expression_temp>"]
    },
    {
      "left": "<equality_expression_temp>",
      "right": ["!=", "<relational_expression>", "<equality_expression_temp>"]
    },
    {
      "left": "<equality_expression_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<equality_expression>",
      "right": ["<relational_expression>", "<equality_expression_temp>"]
    },

    {
      "left": "<assignment_expression_temp>",
      "right": ["=", "<equality_expression>", "<assignment_expression_temp>"]
    },
    {
      "left": "<assignment_expression_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<assignment_expression>",
      "right": ["<equality_expression>", "<assignment_expression_temp>"]
    },

    {
      "left": "<expression>",
      "right": ["<assignment_expression>"]
    },
    {
      "left": "<expression_question>",
      "right": ["<expression>"]
    },
    {
      "left": "<expression_question>",
      "right": ["EPSILON"]
    },

    {
      "left": "<statement>",
      "right": ["<compound_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<expression_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<selection_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<for_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<while_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<break_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<continue_statement>"]
    },
    {
      "left": "<statement>",
      "right": ["<return_statement>"]
    },

    {
      "left": "<compound_statement>",
      "right": ["{", "<block_item_list>", "}"]
    },
    {
      "left": "<block_item>",
      "right": ["<declaration>"]
    },
    {
      "left": "<block_item>",
      "right": ["<statement>"]
    },
    {
      "left": "<block_item_list>",
      "right": ["<block_item>", "<block_item_list_temp>"]
    },
    {
      "left": "<block_item_list>",
      "right": ["EPSILON"]
    },
    {
      "left": "<block_item_list_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<block_item_list_temp>",
      "right": ["<block_item_list>"]
    },

    {
      "left": "<expression_statement>",
      "right": ["<expression>", ";"]
    },
    {
      "left": "<expression_statement>",
      "right": [";"]
    },

    {
      "left": "<return_statement>",
      "right": ["return", "<expression_question>", ";"]
    },

    {
      "left": "<continue_statement>",
      "right": ["continue", ";"]
    },

    {
      "left": "<break_statement>",
      "right": ["break", ";"]
    },

    {
      "left": "<selection_statement>",
      "right": ["if", "(", "<expression>", ")", "<compound_statement>", "<selection_statement_temp>"]
    },
    {
      "left": "<selection_statement_temp>",
      "right": ["EPSILON"]
    },
    {
      "left": "<selection_statement_temp>",
      "right": ["else", "<statement>"]
    },

    {
      "left": "<for_statement>",
      "right": ["for", "(", "<expression_question>", ";", "<expression_question>", ";", "<expression_question>", ")", "<statement>"]
    },

    {
      "left": "<while_statement>",
      "right": ["while", "(", "<expression>", ")", "<statement>"]
    }
  ]
}
